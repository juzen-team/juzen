<?xml version="1.0" encoding="UTF-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|Win32">
      <Configuration>MinSizeRel</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|Win32">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGUID>{136F99B2-5BAF-3935-B1E0-573BE02D6411}</ProjectGUID>
    <Keyword>Win32Proj</Keyword>
    <Platform>Win32</Platform>
    <ProjectName>juzen</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
    <PropertyGroup>
      <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
      <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">D:\Devel\git\juzen\build\Debug\</OutDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">juzen.dir\Debug\</IntDir>
      <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">juzen</TargetName>
      <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">.exe</TargetExt>
      <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</LinkIncremental>
      <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</GenerateManifest>
      <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">D:\Devel\git\juzen\build\Release\</OutDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">juzen.dir\Release\</IntDir>
      <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">juzen</TargetName>
      <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">.exe</TargetExt>
      <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkIncremental>
      <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</GenerateManifest>
      <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">D:\Devel\git\juzen\build\MinSizeRel\</OutDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">juzen.dir\MinSizeRel\</IntDir>
      <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">juzen</TargetName>
      <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">.exe</TargetExt>
      <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkIncremental>
      <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">true</GenerateManifest>
      <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">D:\Devel\git\juzen\build\RelWithDebInfo\</OutDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">juzen.dir\RelWithDebInfo\</IntDir>
      <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">juzen</TargetName>
      <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">.exe</TargetExt>
      <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">true</LinkIncremental>
      <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">true</GenerateManifest>
    </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Devel\git\juzen\build;D:\Devel\git\juzen;D:\Devel\git\juzen\src;D:\Devel\git\jellow\build\include;D:\Devel\libs\qt\qtbase\include;D:\Devel\libs\qt\qtbase\include\QtCore;D:\Devel\libs\qt\qtbase\.\mkspecs\win32-msvc2015;D:\Devel\libs\qt\qtbase\include\QtGui;D:\Devel\libs\qt\qtbase\include\QtWidgets;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Debug/</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;_DEBUG;QT_CORE_LIB;QT_GUI_LIB;QT_WIDGETS_LIB;CMAKE_INTDIR="Debug";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;_DEBUG;QT_CORE_LIB;QT_GUI_LIB;QT_WIDGETS_LIB;CMAKE_INTDIR=\"Debug\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Devel\git\juzen\build;D:\Devel\git\juzen;D:\Devel\git\juzen\src;D:\Devel\git\jellow\build\include;D:\Devel\libs\qt\qtbase\include;D:\Devel\libs\qt\qtbase\include\QtCore;D:\Devel\libs\qt\qtbase\.\mkspecs\win32-msvc2015;D:\Devel\libs\qt\qtbase\include\QtGui;D:\Devel\libs\qt\qtbase\include\QtWidgets;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\Devel\git\juzen\build;D:\Devel\git\juzen;D:\Devel\git\juzen\src;D:\Devel\git\jellow\build\include;D:\Devel\libs\qt\qtbase\include;D:\Devel\libs\qt\qtbase\include\QtCore;D:\Devel\libs\qt\qtbase\.\mkspecs\win32-msvc2015;D:\Devel\libs\qt\qtbase\include\QtGui;D:\Devel\libs\qt\qtbase\include\QtWidgets;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PreBuildEvent>
      <Message>Automatic moc for target juzen</Message>
      <Command>setlocal
cd D:\Devel\git\juzen\build
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
D:\Devel\programs\cmake\bin\cmake.exe -E cmake_autogen D:/Devel/git/juzen/build/CMakeFiles/juzen_automoc.dir/ Debug
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PreBuildEvent>
    <Link>
      <AdditionalOptions> /machine:X86 %(AdditionalOptions)</AdditionalOptions>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib;D:\Devel\libs\qt\qtbase\lib\Qt5Widgetsd.lib;D:\Devel\git\jellow\build\jreen-qt5.lib;D:\Devel\libs\qt\qtbase\lib\Qt5Guid.lib;D:\Devel\libs\qt\qtbase\lib\Qt5Cored.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <GenerateDebugInformation>Debug</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Devel/git/juzen/build/Debug/juzen.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Devel/git/juzen/build/Debug/juzen.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
      <Version></Version>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Devel\git\juzen\build;D:\Devel\git\juzen;D:\Devel\git\juzen\src;D:\Devel\git\jellow\build\include;D:\Devel\libs\qt\qtbase\include;D:\Devel\libs\qt\qtbase\include\QtCore;D:\Devel\libs\qt\qtbase\.\mkspecs\win32-msvc2015;D:\Devel\libs\qt\qtbase\include\QtGui;D:\Devel\libs\qt\qtbase\include\QtWidgets;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Release/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;QT_CORE_LIB;QT_NO_DEBUG;QT_GUI_LIB;QT_WIDGETS_LIB;CMAKE_INTDIR="Release";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat></DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;QT_CORE_LIB;QT_NO_DEBUG;QT_GUI_LIB;QT_WIDGETS_LIB;CMAKE_INTDIR=\"Release\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Devel\git\juzen\build;D:\Devel\git\juzen;D:\Devel\git\juzen\src;D:\Devel\git\jellow\build\include;D:\Devel\libs\qt\qtbase\include;D:\Devel\libs\qt\qtbase\include\QtCore;D:\Devel\libs\qt\qtbase\.\mkspecs\win32-msvc2015;D:\Devel\libs\qt\qtbase\include\QtGui;D:\Devel\libs\qt\qtbase\include\QtWidgets;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\Devel\git\juzen\build;D:\Devel\git\juzen;D:\Devel\git\juzen\src;D:\Devel\git\jellow\build\include;D:\Devel\libs\qt\qtbase\include;D:\Devel\libs\qt\qtbase\include\QtCore;D:\Devel\libs\qt\qtbase\.\mkspecs\win32-msvc2015;D:\Devel\libs\qt\qtbase\include\QtGui;D:\Devel\libs\qt\qtbase\include\QtWidgets;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PreBuildEvent>
      <Message>Automatic moc for target juzen</Message>
      <Command>setlocal
cd D:\Devel\git\juzen\build
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
D:\Devel\programs\cmake\bin\cmake.exe -E cmake_autogen D:/Devel/git/juzen/build/CMakeFiles/juzen_automoc.dir/ Release
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PreBuildEvent>
    <Link>
      <AdditionalOptions> /machine:X86 %(AdditionalOptions)</AdditionalOptions>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib;D:\Devel\libs\qt\qtbase\lib\Qt5Widgets.lib;D:\Devel\git\jellow\build\jreen-qt5.lib;D:\Devel\libs\qt\qtbase\lib\Qt5Gui.lib;D:\Devel\libs\qt\qtbase\lib\Qt5Core.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <GenerateDebugInformation>No</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Devel/git/juzen/build/Release/juzen.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Devel/git/juzen/build/Release/juzen.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
      <Version></Version>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Devel\git\juzen\build;D:\Devel\git\juzen;D:\Devel\git\juzen\src;D:\Devel\git\jellow\build\include;D:\Devel\libs\qt\qtbase\include;D:\Devel\libs\qt\qtbase\include\QtCore;D:\Devel\libs\qt\qtbase\.\mkspecs\win32-msvc2015;D:\Devel\libs\qt\qtbase\include\QtGui;D:\Devel\libs\qt\qtbase\include\QtWidgets;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>MinSizeRel/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;QT_CORE_LIB;QT_NO_DEBUG;QT_GUI_LIB;QT_WIDGETS_LIB;CMAKE_INTDIR="MinSizeRel";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat></DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;QT_CORE_LIB;QT_NO_DEBUG;QT_GUI_LIB;QT_WIDGETS_LIB;CMAKE_INTDIR=\"MinSizeRel\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Devel\git\juzen\build;D:\Devel\git\juzen;D:\Devel\git\juzen\src;D:\Devel\git\jellow\build\include;D:\Devel\libs\qt\qtbase\include;D:\Devel\libs\qt\qtbase\include\QtCore;D:\Devel\libs\qt\qtbase\.\mkspecs\win32-msvc2015;D:\Devel\libs\qt\qtbase\include\QtGui;D:\Devel\libs\qt\qtbase\include\QtWidgets;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\Devel\git\juzen\build;D:\Devel\git\juzen;D:\Devel\git\juzen\src;D:\Devel\git\jellow\build\include;D:\Devel\libs\qt\qtbase\include;D:\Devel\libs\qt\qtbase\include\QtCore;D:\Devel\libs\qt\qtbase\.\mkspecs\win32-msvc2015;D:\Devel\libs\qt\qtbase\include\QtGui;D:\Devel\libs\qt\qtbase\include\QtWidgets;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PreBuildEvent>
      <Message>Automatic moc for target juzen</Message>
      <Command>setlocal
cd D:\Devel\git\juzen\build
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
D:\Devel\programs\cmake\bin\cmake.exe -E cmake_autogen D:/Devel/git/juzen/build/CMakeFiles/juzen_automoc.dir/ MinSizeRel
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PreBuildEvent>
    <Link>
      <AdditionalOptions> /machine:X86 %(AdditionalOptions)</AdditionalOptions>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib;D:\Devel\libs\qt\qtbase\lib\Qt5Widgets.lib;D:\Devel\git\jellow\build\jreen-qt5.lib;D:\Devel\libs\qt\qtbase\lib\Qt5Gui.lib;D:\Devel\libs\qt\qtbase\lib\Qt5Core.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <GenerateDebugInformation>No</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Devel/git/juzen/build/MinSizeRel/juzen.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Devel/git/juzen/build/MinSizeRel/juzen.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
      <Version></Version>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Devel\git\juzen\build;D:\Devel\git\juzen;D:\Devel\git\juzen\src;D:\Devel\git\jellow\build\include;D:\Devel\libs\qt\qtbase\include;D:\Devel\libs\qt\qtbase\include\QtCore;D:\Devel\libs\qt\qtbase\.\mkspecs\win32-msvc2015;D:\Devel\libs\qt\qtbase\include\QtGui;D:\Devel\libs\qt\qtbase\include\QtWidgets;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>RelWithDebInfo/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;QT_CORE_LIB;QT_NO_DEBUG;QT_GUI_LIB;QT_WIDGETS_LIB;CMAKE_INTDIR="RelWithDebInfo";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;QT_CORE_LIB;QT_NO_DEBUG;QT_GUI_LIB;QT_WIDGETS_LIB;CMAKE_INTDIR=\"RelWithDebInfo\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Devel\git\juzen\build;D:\Devel\git\juzen;D:\Devel\git\juzen\src;D:\Devel\git\jellow\build\include;D:\Devel\libs\qt\qtbase\include;D:\Devel\libs\qt\qtbase\include\QtCore;D:\Devel\libs\qt\qtbase\.\mkspecs\win32-msvc2015;D:\Devel\libs\qt\qtbase\include\QtGui;D:\Devel\libs\qt\qtbase\include\QtWidgets;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\Devel\git\juzen\build;D:\Devel\git\juzen;D:\Devel\git\juzen\src;D:\Devel\git\jellow\build\include;D:\Devel\libs\qt\qtbase\include;D:\Devel\libs\qt\qtbase\include\QtCore;D:\Devel\libs\qt\qtbase\.\mkspecs\win32-msvc2015;D:\Devel\libs\qt\qtbase\include\QtGui;D:\Devel\libs\qt\qtbase\include\QtWidgets;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PreBuildEvent>
      <Message>Automatic moc for target juzen</Message>
      <Command>setlocal
cd D:\Devel\git\juzen\build
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
D:\Devel\programs\cmake\bin\cmake.exe -E cmake_autogen D:/Devel/git/juzen/build/CMakeFiles/juzen_automoc.dir/ RelWithDebInfo
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PreBuildEvent>
    <Link>
      <AdditionalOptions> /machine:X86 %(AdditionalOptions)</AdditionalOptions>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib;D:\Devel\libs\qt\qtbase\lib\Qt5Widgets.lib;D:\Devel\git\jellow\build\jreen-qt5.lib;D:\Devel\libs\qt\qtbase\lib\Qt5Gui.lib;D:\Devel\libs\qt\qtbase\lib\Qt5Core.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <GenerateDebugInformation>Debug</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Devel/git/juzen/build/RelWithDebInfo/juzen.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Devel/git/juzen/build/RelWithDebInfo/juzen.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
      <Version></Version>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\Devel\git\juzen\CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Building Custom Rule D:/Devel/git/juzen/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
D:\Devel\programs\cmake\bin\cmake.exe -HD:/Devel/git/juzen -BD:/Devel/git/juzen/build --check-stamp-file D:\Devel\git\juzen\build\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">D:/Devel/git/juzen/CMakeLists.txt;D:\Devel\git\juzen\CMakeLists.txt;D:\Devel\git\juzen\build\CMakeFiles\3.7.2\CMakeSystem.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeSystemSpecificInitialize.cmake;D:\Devel\git\juzen\build\CMakeFiles\3.7.2\CMakeCCompiler.cmake;D:\Devel\git\juzen\build\CMakeFiles\3.7.2\CMakeCXXCompiler.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeSystemSpecificInformation.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeGenericSystem.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\Platform\Windows.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\Platform\WindowsPaths.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeCInformation.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeLanguageInformation.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\Platform\Windows-MSVC-C.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\Platform\Windows-MSVC.cmake;D:\Devel\git\juzen\build\CMakeFiles\3.7.2\CMakeRCCompiler.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeRCInformation.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeCommonLanguageInclude.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeCXXInformation.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeLanguageInformation.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\Compiler\MSVC-CXX.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\Platform\Windows-MSVC-CXX.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\Platform\Windows-MSVC.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeCommonLanguageInclude.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CheckCXXCompilerFlag.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CheckCXXSourceCompiles.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Core\Qt5CoreConfigVersion.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Core\Qt5CoreConfig.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Core\Qt5CoreConfigExtras.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Core\Qt5CoreConfigExtrasMkspecDir.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Core\Qt5CoreMacros.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeParseArguments.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5GuiConfigVersion.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5GuiConfig.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QDDSPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QGifPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QICNSPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QICOPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QJpegPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QMinimalIntegrationPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QOffscreenIntegrationPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QTgaPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QTiffPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QTuioTouchPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QVirtualKeyboardPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QWbmpPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QWebpPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QWindowsIntegrationPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5GuiConfigExtras.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Widgets\Qt5WidgetsConfigVersion.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Widgets\Qt5WidgetsConfig.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Widgets\Qt5WidgetsConfigExtras.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Widgets\Qt5WidgetsMacros.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeParseArguments.cmake;D:\Devel\git\juzen\cmake\FindJellow.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\AutogenInfo.cmake.in;D:\Devel\git\juzen\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">D:\Devel\git\juzen\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Building Custom Rule D:/Devel/git/juzen/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
D:\Devel\programs\cmake\bin\cmake.exe -HD:/Devel/git/juzen -BD:/Devel/git/juzen/build --check-stamp-file D:\Devel\git\juzen\build\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">D:/Devel/git/juzen/CMakeLists.txt;D:\Devel\git\juzen\CMakeLists.txt;D:\Devel\git\juzen\build\CMakeFiles\3.7.2\CMakeSystem.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeSystemSpecificInitialize.cmake;D:\Devel\git\juzen\build\CMakeFiles\3.7.2\CMakeCCompiler.cmake;D:\Devel\git\juzen\build\CMakeFiles\3.7.2\CMakeCXXCompiler.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeSystemSpecificInformation.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeGenericSystem.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\Platform\Windows.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\Platform\WindowsPaths.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeCInformation.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeLanguageInformation.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\Platform\Windows-MSVC-C.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\Platform\Windows-MSVC.cmake;D:\Devel\git\juzen\build\CMakeFiles\3.7.2\CMakeRCCompiler.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeRCInformation.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeCommonLanguageInclude.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeCXXInformation.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeLanguageInformation.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\Compiler\MSVC-CXX.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\Platform\Windows-MSVC-CXX.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\Platform\Windows-MSVC.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeCommonLanguageInclude.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CheckCXXCompilerFlag.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CheckCXXSourceCompiles.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Core\Qt5CoreConfigVersion.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Core\Qt5CoreConfig.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Core\Qt5CoreConfigExtras.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Core\Qt5CoreConfigExtrasMkspecDir.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Core\Qt5CoreMacros.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeParseArguments.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5GuiConfigVersion.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5GuiConfig.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QDDSPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QGifPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QICNSPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QICOPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QJpegPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QMinimalIntegrationPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QOffscreenIntegrationPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QTgaPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QTiffPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QTuioTouchPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QVirtualKeyboardPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QWbmpPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QWebpPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QWindowsIntegrationPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5GuiConfigExtras.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Widgets\Qt5WidgetsConfigVersion.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Widgets\Qt5WidgetsConfig.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Widgets\Qt5WidgetsConfigExtras.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Widgets\Qt5WidgetsMacros.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeParseArguments.cmake;D:\Devel\git\juzen\cmake\FindJellow.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\AutogenInfo.cmake.in;D:\Devel\git\juzen\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">D:\Devel\git\juzen\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Building Custom Rule D:/Devel/git/juzen/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
D:\Devel\programs\cmake\bin\cmake.exe -HD:/Devel/git/juzen -BD:/Devel/git/juzen/build --check-stamp-file D:\Devel\git\juzen\build\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">D:/Devel/git/juzen/CMakeLists.txt;D:\Devel\git\juzen\CMakeLists.txt;D:\Devel\git\juzen\build\CMakeFiles\3.7.2\CMakeSystem.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeSystemSpecificInitialize.cmake;D:\Devel\git\juzen\build\CMakeFiles\3.7.2\CMakeCCompiler.cmake;D:\Devel\git\juzen\build\CMakeFiles\3.7.2\CMakeCXXCompiler.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeSystemSpecificInformation.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeGenericSystem.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\Platform\Windows.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\Platform\WindowsPaths.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeCInformation.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeLanguageInformation.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\Platform\Windows-MSVC-C.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\Platform\Windows-MSVC.cmake;D:\Devel\git\juzen\build\CMakeFiles\3.7.2\CMakeRCCompiler.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeRCInformation.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeCommonLanguageInclude.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeCXXInformation.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeLanguageInformation.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\Compiler\MSVC-CXX.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\Platform\Windows-MSVC-CXX.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\Platform\Windows-MSVC.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeCommonLanguageInclude.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CheckCXXCompilerFlag.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CheckCXXSourceCompiles.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Core\Qt5CoreConfigVersion.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Core\Qt5CoreConfig.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Core\Qt5CoreConfigExtras.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Core\Qt5CoreConfigExtrasMkspecDir.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Core\Qt5CoreMacros.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeParseArguments.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5GuiConfigVersion.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5GuiConfig.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QDDSPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QGifPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QICNSPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QICOPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QJpegPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QMinimalIntegrationPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QOffscreenIntegrationPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QTgaPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QTiffPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QTuioTouchPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QVirtualKeyboardPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QWbmpPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QWebpPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QWindowsIntegrationPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5GuiConfigExtras.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Widgets\Qt5WidgetsConfigVersion.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Widgets\Qt5WidgetsConfig.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Widgets\Qt5WidgetsConfigExtras.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Widgets\Qt5WidgetsMacros.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeParseArguments.cmake;D:\Devel\git\juzen\cmake\FindJellow.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\AutogenInfo.cmake.in;D:\Devel\git\juzen\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">D:\Devel\git\juzen\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Building Custom Rule D:/Devel/git/juzen/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
D:\Devel\programs\cmake\bin\cmake.exe -HD:/Devel/git/juzen -BD:/Devel/git/juzen/build --check-stamp-file D:\Devel\git\juzen\build\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">D:/Devel/git/juzen/CMakeLists.txt;D:\Devel\git\juzen\CMakeLists.txt;D:\Devel\git\juzen\build\CMakeFiles\3.7.2\CMakeSystem.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeSystemSpecificInitialize.cmake;D:\Devel\git\juzen\build\CMakeFiles\3.7.2\CMakeCCompiler.cmake;D:\Devel\git\juzen\build\CMakeFiles\3.7.2\CMakeCXXCompiler.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeSystemSpecificInformation.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeGenericSystem.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\Platform\Windows.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\Platform\WindowsPaths.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeCInformation.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeLanguageInformation.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\Platform\Windows-MSVC-C.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\Platform\Windows-MSVC.cmake;D:\Devel\git\juzen\build\CMakeFiles\3.7.2\CMakeRCCompiler.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeRCInformation.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeCommonLanguageInclude.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeCXXInformation.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeLanguageInformation.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\Compiler\MSVC-CXX.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\Platform\Windows-MSVC-CXX.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\Platform\Windows-MSVC.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeCommonLanguageInclude.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CheckCXXCompilerFlag.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CheckCXXSourceCompiles.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Core\Qt5CoreConfigVersion.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Core\Qt5CoreConfig.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Core\Qt5CoreConfigExtras.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Core\Qt5CoreConfigExtrasMkspecDir.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Core\Qt5CoreMacros.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeParseArguments.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5GuiConfigVersion.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5GuiConfig.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QDDSPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QGifPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QICNSPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QICOPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QJpegPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QMinimalIntegrationPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QOffscreenIntegrationPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QTgaPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QTiffPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QTuioTouchPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QVirtualKeyboardPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QWbmpPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QWebpPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5Gui_QWindowsIntegrationPlugin.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Gui\Qt5GuiConfigExtras.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Widgets\Qt5WidgetsConfigVersion.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Widgets\Qt5WidgetsConfig.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Widgets\Qt5WidgetsConfigExtras.cmake;D:\Devel\libs\qt\qtbase\lib\cmake\Qt5Widgets\Qt5WidgetsMacros.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\CMakeParseArguments.cmake;D:\Devel\git\juzen\cmake\FindJellow.cmake;D:\Devel\programs\cmake\share\cmake-3.7\Modules\AutogenInfo.cmake.in;D:\Devel\git\juzen\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">D:\Devel\git\juzen\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="D:\Devel\git\juzen\src\Roster\Roster.h" />
    <ClInclude Include="D:\Devel\git\juzen\src\Roster\Contact.h" />
    <ClInclude Include="D:\Devel\git\juzen\src\System\AppInfo.h" />
    <ClInclude Include="D:\Devel\git\juzen\src\System\Settings.h" />
    <ClInclude Include="D:\Devel\git\juzen\src\Account.h" />
    <ClInclude Include="D:\Devel\git\juzen\src\AccountManager.h" />
    <ClInclude Include="D:\Devel\git\juzen\src\MainWindow.h" />
    <ClInclude Include="D:\Devel\git\juzen\src\Widgets\ContactListView.h" />
    <ClInclude Include="D:\Devel\git\juzen\src\Widgets\ContactListDelegate.h" />
    <ClInclude Include="D:\Devel\git\juzen\src\Widgets\ContactListModel.h" />
    <ClInclude Include="D:\Devel\git\juzen\src\Widgets\AccountAddWizard.h" />
    <ClInclude Include="D:\Devel\git\juzen\src\Widgets\WizardStartPage.h" />
    <ClInclude Include="D:\Devel\git\juzen\src\Widgets\AccountAddExistingWizardPage.h" />
    <ClInclude Include="D:\Devel\git\juzen\src\Widgets\AccountRegisterWizardPage.h" />
    <ClInclude Include="D:\Devel\git\juzen\src\Widgets\DataFormWidget.h" />
    <ClInclude Include="D:\Devel\git\juzen\src\Widgets\DataFormFieldWidget.h" />
    <ClInclude Include="D:\Devel\git\juzen\src\Widgets\AccountRegisterFormWizardPage.h" />
    <ClCompile Include="D:\Devel\git\juzen\src\main.cpp"  />
    <ClCompile Include="D:\Devel\git\juzen\src\Roster\Roster.cpp"  />
    <ClCompile Include="D:\Devel\git\juzen\src\Roster\Contact.cpp"  />
    <ClCompile Include="D:\Devel\git\juzen\src\System\AppInfo.cpp"  />
    <ClCompile Include="D:\Devel\git\juzen\src\System\Settings.cpp"  />
    <ClCompile Include="D:\Devel\git\juzen\src\Account.cpp"  />
    <ClCompile Include="D:\Devel\git\juzen\src\AccountManager.cpp"  />
    <ClCompile Include="D:\Devel\git\juzen\src\MainWindow.cpp"  />
    <ClCompile Include="D:\Devel\git\juzen\src\Widgets\ContactListView.cpp"  />
    <ClCompile Include="D:\Devel\git\juzen\src\Widgets\ContactListDelegate.cpp"  />
    <ClCompile Include="D:\Devel\git\juzen\src\Widgets\ContactListModel.cpp"  />
    <ClCompile Include="D:\Devel\git\juzen\src\Widgets\AccountAddWizard.cpp"  />
    <ClCompile Include="D:\Devel\git\juzen\src\Widgets\WizardStartPage.cpp"  />
    <ClCompile Include="D:\Devel\git\juzen\src\Widgets\AccountAddExistingWizardPage.cpp"  />
    <ClCompile Include="D:\Devel\git\juzen\src\Widgets\AccountRegisterWizardPage.cpp"  />
    <ClCompile Include="D:\Devel\git\juzen\src\Widgets\DataFormWidget.cpp"  />
    <ClCompile Include="D:\Devel\git\juzen\src\Widgets\DataFormFieldWidget.cpp"  />
    <ClCompile Include="D:\Devel\git\juzen\src\Widgets\AccountRegisterFormWizardPage.cpp"  />
    <ClCompile Include="D:\Devel\git\juzen\build\juzen_automoc.cpp"  />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="D:/Devel/git/juzen/build/ZERO_CHECK.vcxproj">
      <Project>E533CE86-B689-3A81-9B29-96127EA0D658</Project>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>